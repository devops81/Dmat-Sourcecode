package com.devopps.portal.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.devopps.portal.model.SaveNotificationRequestBody;
import com.devopps.portal.model.SaveNotificationServiceResponse;
import com.devopps.portal.model.SaveProfileServiceResponse;
import com.devopps.portal.model.UserProfileRequestBody;
import com.devopps.portal.service.IProfileService;
import com.devopps.portal.util.Log;
import com.devopps.portal.util.LogFactory;


@RestController
@RequestMapping("/profile")
public class ProfileController extends AbstractController{
	
	@Autowired
	@Qualifier("IProfileService")
	IProfileService profileService;
	
	private static final Log LOGGER = LogFactory.getLog(ProfileController.class);
	
	/**
	 * URL : http://localhost:8080/DevOppsServices/profile/saveUpdateProfile/1.0
	 * 
	 * <saveUpdateProfile>
	 *  <saveOrUpdate>1</saveOrUpdate> // 1 for save, anything else for update
	 *  <employeeId>40021000</employeeId>
	 *  <name>xyz</name>
	 *  <roleId>1</roleId>
	 *  <accountId>1</accountId>
	 *  <password>ggn@11</password>
	 *  <isActive>true</isActive>
	 * </saveUpdateProfile>
	 * 
	 * @param request
	 * @param version
	 * @param userProfileRequestBody
	 * @return
	 */
	@RequestMapping(value = "/saveUpdateProfile/{version}", method = RequestMethod.POST, produces = "application/xml")
	public @ResponseBody String saveUserProfile(HttpServletRequest request, @PathVariable Integer version, @RequestBody(required=true) UserProfileRequestBody userProfileRequestBody) {
		LOGGER.debug("[saveUserProfile] Service :: Start");
		SaveProfileServiceResponse response = null;
		response = profileService.saveUserProfile(userProfileRequestBody);
		LOGGER.debug("[saveUserProfile()] :: Ends :: Response -> "+response);
		String stringXML = marshal(response);
		String jsonResponse = convertXMlToJson(stringXML);
		System.out.println(jsonResponse);
		return jsonResponse;
	}
	
	
	/*@RequestMapping(value = "/saveProfile/{version}", method = RequestMethod.POST, produces = "application/xml")
	public @ResponseBody String saveProfile(HttpServletRequest request, @PathVariable Integer version, @RequestBody(required=true) UserProfileRequestBody userProfileRequestBody) {
		LOGGER.debug("[saveUserProfile] Service :: Start");
		SaveProfileServiceResponse response = null;
		response = profileService.saveProfile(userProfileRequestBody);
		LOGGER.debug("[saveUserProfile()] :: Ends :: Response -> "+response);
		String stringXML = marshal(response);
		String jsonResponse = convertXMlToJson(stringXML);
		System.out.println(jsonResponse);
		return jsonResponse;
	}*/
	
	/*
	 * URL :http://localhost:8080/DevOppsServices/profile/saveNotifications/1.0
	 * 
	 * <saveUpdateNotifications>
	 *  <saveOrUpdate>1</saveOrUpdate> // 1 is for Save, anything else is for update
	 *  <actionId>1</actionId>
	 *  <isNotifyAssessor></isNotifyAssessor>
	 *  <isNotifyLeadAssessor></isNotifyLeadAssessor>
	 * </saveUpdateNotifications>
	 */
	@RequestMapping(value = "/saveNotifications/{version}", method = RequestMethod.POST, produces = "application/xml")
	public @ResponseBody String saveNotifications(HttpServletRequest request, @PathVariable Integer version, @RequestBody(required=true) SaveNotificationRequestBody saveNotificationRequestBody) {
		LOGGER.debug("[saveNotifications] Service :: Start");
		SaveNotificationServiceResponse response = null;
		response = profileService.saveNotifications(saveNotificationRequestBody);
		LOGGER.debug("[saveNotifications()] :: Ends :: Response -> "+ response);
		String stringXML = marshal(response);
		return convertXMlToJson(stringXML);
	}
	
	
}
