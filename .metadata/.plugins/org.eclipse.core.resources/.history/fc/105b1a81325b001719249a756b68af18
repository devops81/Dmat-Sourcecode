package com.devopps.portal.service;

import org.hibernate.HibernateException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import com.devopps.portal.dao.IProfileDao;
import com.devopps.portal.exception.ExceptionHandler;
import com.devopps.portal.exception.NoRecordsFoundException;
import com.devopps.portal.model.ResponseHeader;
import com.devopps.portal.model.SaveNotificationRequestBody;
import com.devopps.portal.model.SaveNotificationServiceResponse;
import com.devopps.portal.model.SaveProfileResponseBody;
import com.devopps.portal.model.SaveProfileServiceResponse;
import com.devopps.portal.model.UserProfileRequestBody;
import com.devopps.portal.util.IConstants;
import com.devopps.portal.util.IStatusCodeConstants;

@Component("IProfileService")
public class ProfileServiceImpl implements IProfileService{

	@Autowired
	@Qualifier("IProfileDao")
	IProfileDao profileDao;
	
	@Override
	public SaveProfileServiceResponse saveUserProfile(UserProfileRequestBody userProfileRequestBody) {
		
		
		SaveProfileServiceResponse response = new SaveProfileServiceResponse();
		try {
			profileDao.saveUserProfile(userProfileRequestBody);
		} catch (HibernateException ex) {
		 	ExceptionHandler.handle(ex);
			return buildFailureReponse();
		} catch (Exception ex) {
			ExceptionHandler.handle(ex);
			return buildFailureReponse();
		}
		response = buildSuccessResponse();
		return response;
	}
	
	
	
	private SaveProfileServiceResponse buildFailureReponse() {
		SaveProfileServiceResponse response = new SaveProfileServiceResponse();
		ResponseHeader responseHeader = new ResponseHeader();
		SaveProfileResponseBody responseBody = new SaveProfileResponseBody();
		responseHeader.setStatusCode(IStatusCodeConstants.STATUS_FAILURE);
		responseHeader.setStatusDesc(IStatusCodeConstants.FAILURE_DESC);
		responseHeader.setOperationName(IConstants.SAVE_PROFILE);
		responseBody.setStatusMsg(IConstants.FAILURE_MESSAGE);
		response.setResponseHeader(responseHeader);
		response.setSaveProfileResponseBody(responseBody);
		return response;
	}
	
	private String buildFailureReponses() {
		String response ;
		ResponseHeader responseHeader = new ResponseHeader();
		SaveProfileResponseBody responseBody = new SaveProfileResponseBody();
		responseHeader.setStatusCode(IStatusCodeConstants.STATUS_FAILURE);
		responseHeader.setStatusDesc(IStatusCodeConstants.FAILURE_DESC);
		responseHeader.setOperationName(IConstants.SAVE_PROFILE);
		responseBody.setStatusMsg(IConstants.FAILURE_MESSAGE);
		response.setResponseHeader(responseHeader);
		response.setSaveProfileResponseBody(responseBody);
		return response;
	}
	
	private SaveProfileServiceResponse buildSuccessResponse() {
		SaveProfileServiceResponse response = new SaveProfileServiceResponse();
		ResponseHeader responseHeader = new ResponseHeader();
		SaveProfileResponseBody responseBody = new SaveProfileResponseBody();
		responseHeader.setStatusCode(IStatusCodeConstants.STATUS_SUCCESS);
		responseHeader.setStatusDesc(IStatusCodeConstants.SUCCESS_DESC);
		responseHeader.setOperationName(IConstants.SAVE_PROFILE);
		responseBody.setStatusMsg(IConstants.SUCCESS_MESSAGE);
		response.setResponseHeader(responseHeader);
		response.setSaveProfileResponseBody(responseBody);
		return response;
	}



	@Override
	public SaveNotificationServiceResponse saveNotifications(
			SaveNotificationRequestBody saveNotificationRequestBody) {
		try {
			profileDao.saveNotifications(saveNotificationRequestBody);
		} catch (HibernateException ex) {
		 	ExceptionHandler.handle(ex);
			return buildNotificationReponse(IStatusCodeConstants.STATUS_FAILURE, IConstants.FAILURE_MESSAGE);
		} catch (NoRecordsFoundException nfe) {
			ExceptionHandler.handle(nfe);
			return buildNotificationReponse(IStatusCodeConstants.NO_RECORDS_FOUND, IConstants.NO_RECORDS_FOUND);
		}catch (Exception ex) {
			ExceptionHandler.handle(ex);
			return buildNotificationReponse(IStatusCodeConstants.STATUS_FAILURE, IConstants.FAILURE_MESSAGE);
		}
		return buildNotificationReponse (IStatusCodeConstants.STATUS_SUCCESS,IConstants.SUCCESS_MESSAGE);
	}


	private SaveNotificationServiceResponse buildNotificationReponse(String statusCode, String statusDesc) {
		SaveNotificationServiceResponse saveNotificationServiceResponse = new SaveNotificationServiceResponse();
		ResponseHeader responseHeader = new ResponseHeader(); 
		responseHeader.setOperationName(IConstants.SAVE_NOTIFICATIONS);
		responseHeader.setStatusCode(statusCode);
		responseHeader.setStatusDesc(statusDesc);
		saveNotificationServiceResponse.setSaveNotificationsResponseHeader(responseHeader);
		return saveNotificationServiceResponse;
	}




	
	@Override
	public String saveProfile(UserProfileRequestBody userProfileRequestBody) {
		
		
		String response ;
		try {
			profileDao.saveProfile(userProfileRequestBody);
		} catch (HibernateException ex) {
		 	ExceptionHandler.handle(ex);
			return buildFailureReponse();
		} catch (Exception ex) {
			ExceptionHandler.handle(ex);
			return buildFailureReponse();
		}
		response = buildSuccessResponse();
		return response;
	}

	
}
